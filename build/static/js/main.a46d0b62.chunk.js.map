{"version":3,"sources":["utils/duration/index.js","pomodoro/SetDuration/SetFocus.js","pomodoro/SetDuration/SetBreak.js","pomodoro/SetDuration/SetDuration.js","pomodoro/Buttons/PlayPauseButton.js","utils/class-names/index.js","pomodoro/Buttons/StopButton.js","pomodoro/Buttons/Buttons.js","pomodoro/Progress/Status.js","pomodoro/Progress/Paused.js","pomodoro/Progress/Bar.js","pomodoro/Progress/Progress.js","pomodoro/Pomodoro.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","secondsToDuration","givenSeconds","seconds","round","SetFocus","duration","setDuration","active","className","data-testid","type","onClick","max","disabled","min","SetBreak","SetDuration","focusDuration","setFocusDuration","breakDuration","setBreakDuration","propType","PropTypes","func","isRequired","number","bool","PlayPause","classNameToBoolean","isTimerRunning","playPause","title","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","StopButton","stop","Buttons","session","object","role","aria-label","Status","timer","Paused","text","Bar","percentComplete","style","height","aria-valuemin","aria-valuemax","aria-valuenow","width","Progress","Pomodoro","useState","setIsTimerRunning","setSession","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","Audio","play","prevState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a46d0b62.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\nimport { minutesToDuration } from \"../../utils/duration\"\nimport PropTypes from 'prop-types';\n\nfunction SetFocus({duration, setDuration, active}){\n    const decreaseHandler = () => setDuration(Math.max(duration - 5, 5))\n    const increaseHandler = () => setDuration(Math.min(duration + 5, 60))\n\n    return(\n        <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n                Focus Duration: {minutesToDuration(duration)}\n            </span>\n            <div className=\"input-group-append\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-testid=\"decrease-focus\"\n                    onClick={decreaseHandler}\n                    disabled={active} // if a session has started, the button is disabled\n                >\n                    <span className=\"oi oi-minus\" />\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-testid=\"increase-focus\"\n                    onClick={increaseHandler}\n                    disabled={active} // if a session has started, the button is disabled\n                >\n                    <span className=\"oi oi-plus\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\n\nexport default SetFocus","import React from \"react\";\nimport { minutesToDuration } from \"../../utils/duration\"\nimport PropTypes from 'prop-types';\n\nfunction SetBreak({duration, setDuration, active}){    \n    const decreaseHandler = () => setDuration(Math.max(duration - 1, 1))\n    const increaseHandler = () => setDuration(Math.min(duration + 1, 15))\n    \n    return (\n        <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n                <span className=\"input-group-text\" data-testid=\"duration-break\">\n                    Break Duration: {minutesToDuration(duration)}\n                </span>\n                <div className=\"input-group-append\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        data-testid=\"decrease-break\"\n                        onClick = {decreaseHandler}\n                        disabled={active} // if a session has started, the button is disabled\n                    >\n                        <span className=\"oi oi-minus\" />\n                    </button>\n                    \n                    <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        data-testid=\"increase-break\"\n                        onClick = {increaseHandler}\n                        disabled={active} // if a session has started, the button is disabled\n                    >\n                        \n                        <span className=\"oi oi-plus\" />\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SetBreak","import React from \"react\";\nimport SetFocus from \"./SetFocus\"\nimport SetBreak from \"./SetBreak\"\nimport PropTypes from \"prop-types\"\n\n\nfunction SetDuration({focusDuration, setFocusDuration,\n    breakDuration, setBreakDuration, active}){\n    SetBreak.propType  = {\n        setBreakDuration: PropTypes.func.isRequired,\n        setFocusDuration: PropTypes.func.isRequired,\n        focusDuration: PropTypes.number.isRequired,\n        breakDuration: PropTypes.number.isRequired,\n        active: PropTypes.bool.isRequired\n    }\n    \n    return (\n        <div className=\"row\">\n             <div className=\"col\">\n                <SetFocus duration={focusDuration} setDuration={setFocusDuration} active={active}/>  \n            </div>\n            <div className=\"col\">\n                <SetBreak duration={breakDuration} setDuration={setBreakDuration} active={active}/>\n            </div>\n        </div>\n    )\n}\n\nexport default SetDuration","import React from \"react\";\nimport classNames from \"../../utils/class-names\";\n\nfunction PlayPause({isTimerRunning, playPause}){\n    \n    return (\n        <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            data-testid=\"play-pause\"\n            title=\"Start or pause timer\"\n            onClick={playPause}\n        >\n            <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n            />\n        </button>\n    )\n}\n\nexport default PlayPause","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React from \"react\";\n\nfunction StopButton({stop, active}){\n    return (\n        <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            title=\"Stop the session\"\n            onClick = {stop}\n            disabled = {!active} //if the session hasn't started yet, the stop button is disabled\n        >\n            <span className=\"oi oi-media-stop\" />\n        </button>\n    )\n}\n\nexport default StopButton","import React from \"react\";\nimport PlayPause from \"./PlayPauseButton\"\nimport StopButton from \"./StopButton\"\nimport PropTypes from \"prop-types\"\n\nfunction Buttons({session, isTimerRunning, stop, playPause}){\n    Buttons.propType  = {\n        playPause: PropTypes.func.isRequired,\n        stop: PropTypes.func.isRequired,\n        isTimerRunning: PropTypes.bool.isRequired,\n        session: PropTypes.object.isRequired,\n    } \n\n    return(\n        <div className=\"row\">\n            <div className=\"col\">\n            <div\n                className=\"btn-group btn-group-lg mb-2\"\n                role=\"group\"\n                aria-label=\"Timer controls\"\n            >\n                <PlayPause isTimerRunning={isTimerRunning} playPause={playPause} /> \n                <StopButton stop={stop} active ={session.active} />\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Buttons","import React from \"react\"; \nimport {secondsToDuration} from \"../../utils/duration\";\n\n\nfunction Status({session}){\n    const {timer, type, duration, active} = session\n\n    return (\n        <>\n            <h2 data-testid=\"session-title\">{type} for {secondsToDuration(duration)} minutes</h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n                    {secondsToDuration(duration-timer)} remaining\n            </p>\n        </>\n    )\n}\n\nexport default Status","import React from \"react\"; \n\nfunction Paused({isTimerRunning}){\n    const text = !isTimerRunning ? \"PAUSED\" : null\n\n    return (<p>{text}</p>)\n}\n\nexport default Paused","import React from \"react\";     \n      \nfunction Bar({session}){\n  const {timer, duration} = session\n  const percentComplete = (timer / duration) * 100\n\n  return (\n    <div className=\"progress\" style={{ height: \"20px\"}}>\n      <div\n        className=\"progress-bar\"\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        aria-valuenow= {percentComplete}\n        style={{ width: `${percentComplete}%`}}\n      />\n    </div>\n      \n  )\n}\n\nexport default Bar","import React from \"react\"\nimport Status from \"./Status\"\nimport Paused from \"./Paused\"\nimport Bar from \"./Bar\"\nimport PropTypes from \"prop-types\"; \n\nfunction Progress ({session, isTimerRunning}) {\n    Progress.propType  = {\n        session: PropTypes.object.isRequired,\n        isTimerRunning: PropTypes.bool.isRequired\n    } \n    if (!session.active) {return null}    //if the session has not begun/stopped this component doesn't show\n    \n    return (\n        <div>\n            <div className=\"row mb-2\">\n                <div className=\"col\">\n                    <Status session={session} />\n                    <Paused isTimerRunning={isTimerRunning}/>\n                </div>     \n            </div>\n            <div className=\"row mb-2\">\n                <div className=\"col\">\n                    <Bar session={session} />\n                </div>\n            </div>\n        </div>  \n    )\n}\n\nexport default Progress\n","import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport SetDuration from \"./SetDuration/SetDuration\"\nimport Buttons from \"./Buttons/Buttons\"\n\nimport Progress from \"./Progress/Progress\"\nimport Status from \"./Progress/Status\";\nimport ProgressBar from \"./Progress/Bar\";\n\nfunction Pomodoro() {\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // whether or not the session is paused\n  const [breakDuration, setBreakDuration] = useState(5) // break  session duration as set in initial screen\n  const [focusDuration, setFocusDuration] = useState(25) // focus session duration as set in initial screen\n  const [session, setSession] = useState({active: false, type: \"Focusing\", timer: 0, duration: 0}) // active session state\n  \n  useInterval(\n    () => {\n      // every second, the timer should increase by one\n      setSession({...session, timer: session.timer+1})\n      \n      if(session.timer === session.duration){ //once timer reaches length of duration\n        // Play Alarm\n        new Audio(`../public/alarm/submarine-dive-horn.mp3`).play()\n        // change 'type' and 'timer' property of the session\n        session.type === \"Focusing\" ? setSession({...session, type: \"On Break\", timer: 0, duration:breakDuration*60}) : \n          setSession({...session, type: \"Focusing\", timer: 0, duration:focusDuration*60});\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    //session starts, timer set to focusDuration in seconds, active to true\n    if (!session.active) { setSession({...session, active: true, duration: focusDuration*60}) }; \n    //whenever called, timer is paused/unpaused\n    setIsTimerRunning((prevState) => !prevState);\n  }\n  function stop() {\n    setSession({active: false, type: \"Focusing\", timer: 0});\n    setIsTimerRunning(false);\n  }\n\n  return (\n    \n    \n    <div className=\"pomodoro\">\n      <SetDuration focusDuration={focusDuration} setFocusDuration={setFocusDuration} breakDuration={breakDuration} \n        setBreakDuration={setBreakDuration} active={session.active}/>\n      \n      <Buttons session={session} isTimerRunning={isTimerRunning} playPause={playPause} stop={stop} />\n      \n      <Progress session={session} isTimerRunning={isTimerRunning} />\n      \n    </div>\n  );\n}\n\nexport default Pomodoro;\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}